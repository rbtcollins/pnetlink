use pnet_macros_support::types::*;

#[packet]
pub struct IfInfo {
    family: u8,
    _pad: u8,
    type_: u16le,
    index: u32le,
    flags: u32le,
    change: u32le,
    #[payload]
    payload: Vec<u8>
}

#[packet]
pub struct RtAttr {
    rta_len: u16le,
    rta_type: u16le,
    #[payload]
    #[length_fn = "rtattr_len"]
    payload: Vec<u8>,
}

fn rtattr_len(pkt: &RtAttrPacket) -> usize {
    use std::num::Wrapping;
    (Wrapping(pkt.get_rta_len()) - Wrapping(4)).0 as usize
}
